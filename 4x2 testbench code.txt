`timescale 1ns / 1ps

////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer:
//
// Create Date:   05:58:44 04/16/2025
// Design Name:   encoder4to2
// Module Name:   /home/ise/karan/tb_encoder4to2.v
// Project Name:  karan
// Target Device:  
// Tool versions:  
// Description: 
//
// Verilog Test Fixture created by ISE for module: encoder4to2
//
// Dependencies:
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
////////////////////////////////////////////////////////////////////////////////

module tb_encoder4to2;

	// Inputs
	reg in0;
	reg in1;
	reg in2;
	reg in3;

	// Outputs
	wire out0;
	wire out1;

	// Instantiate the Unit Under Test (UUT)
	encoder4to2 uut (
		.in0(in0), 
		.in1(in1), 
		.in2(in2), 
		.in3(in3), 
		.out0(out0), 
		.out1(out1)
	);

	initial begin
        $display("-----------------------------------------------------");
        $display("| in3 | in2 | in1 | in0 || out1 | out0 |");
        $display("-----------------------------------------------------");

		  // Test valid and invalid input combinations
        test_case(4'b0001); // in0 high
        test_case(4'b0010); // in1 high
        test_case(4'b0100); // in2 high
        test_case(4'b1000); // in3 high
		  
		  $display("-----------------------------------------------------");
        $finish;
    end

    // Task to apply input pattern and display output
    task test_case;
        input [3:0] value;
        begin
            {in3, in2, in1, in0} = value;
            #5;  // wait for output to settle
            $display("|  %b  |  %b  |  %b  |  %b  ||   %b   |  %b   |", 
                in3, in2, in1, in0, out1, out0);
        end
    endtask
      
endmodule
